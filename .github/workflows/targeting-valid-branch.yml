name: Targeting Valid Branch
on: [pull_request_target]
jobs:
  Test:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - name: List info
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          echo "Targeting: ${{ github.base_ref }}"
          $Owner, $Repo = "${{ github.repository }}" -split "/"
          echo "Repo Owner: $Owner"
          echo "Repo Name:  $Repo
          echo "For PR: ${{ github.event.number}}"
          $StringBuilder = [System.Text.StringBuilder]::new()
          [void]$StringBuilder.Append('query($owner: String!, $repo: String!) {')
          [void]$StringBuilder.AppendLine('  repository(owner: $owner, name: $repo) {')
          [void]$StringBuilder.AppendLine('    pullRequest(number: 8695) {')
          [void]$StringBuilder.AppendLine('      author {')
          [void]$StringBuilder.AppendLine('        login')
          [void]$StringBuilder.AppendLine('      }')
          [void]$StringBuilder.AppendLine('      authorAssociation')
          [void]$StringBuilder.AppendLine('    }')
          [void]$StringBuilder.AppendLine('  }')
          [void]$StringBuilder.AppendLine('}')
          $Query = $StringBuilder.ToString()
          echo "Query: $Query"
          $JQ = '.data.repository.pullRequest | {author, authorAssociation}'
          echo "JQ: $JQ"
          # gh api graphql -F owner=$Owner -F repo=$Repo -f query=$Query --jq $JQ
          # $Permission = gh repo view ${{ github.repository }} --json 'viewerPermission'
          # echo "$Permission"
          # echo "$($Permission | ConvertFrom-Json -ErrorAction Stop)"
          # echo "$($Permission | ConvertFrom-Json | Select -Expand viewerPermission)"
      # - name: Authorized to Target Live Branch?
      #   if: ${{ github.base_ref == 'live' }}
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   run: |
      #     $Permission = gh repo view ${{ github.repository }} --json 'viewerPermission'
      #     | ConvertFrom-Json
      #     | Select-Object -ExpandProperty viewerPermission
      #     if ($Permission -notin @('WRITE', 'ADMIN')) {
      #       throw "User ${{ github.actor }} does not have permissions to target live branch."
      #     } else {
      #       echo "User has permissions to target live branch."
      #     }
